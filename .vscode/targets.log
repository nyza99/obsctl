make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 

# Make data base, printed on Thu Jul 28 07:47:29 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `.bingo/Variables.mk', line 38)
MDOX := /Users/nyza/go/bin/mdox-v0.9.0
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/nyza/obsctl
# makefile
SHELL = /bin/sh
# makefile (from `.bingo/Variables.mk', line 6)
GO = $(shell which go)
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `.bingo/Variables.mk', line 1)
MAKEFILE_LIST :=  Makefile .bingo/Variables.mk
# makefile (from `Makefile', line 17)
define require_clean_work_tree
	@git update-index -q --ignore-submodules --refresh

    @if ! git diff-files --quiet --ignore-submodules --; then echo >&2 "$1: you have unstaged changes."; git diff-files --name-status -r --ignore-submodules -- >&2; echo >&2 "Please commit or stash them."; exit 1; fi

    @if ! git diff-index --cached --quiet HEAD --ignore-submodules --; then echo >&2 "$1: your index contains uncommitted changes."; git diff-index --cached --name-status -r --ignore-submodules HEAD -- >&2; echo >&2 "Please commit or stash them."; exit 1; fi

endef
# makefile (from `Makefile', line 5)
GO111MODULE = on
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/jm/g6zkfbzn6fzgdjkqk92b5xqc0000gn/T/vscode-ipc-afee0c3d-cb07-499f-ba4a-1dbcf783c230.sock
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/nyza:/usr/local/munki
# makefile (from `.bingo/Variables.mk', line 32)
GOLANGCI_LINT := /Users/nyza/go/bin/golangci-lint-v1.44.0
# environment
GOPATH = /Users/nyza/go
# makefile (from `Makefile', line 75)
GOCACHE = /tmp/cache
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `.bingo/Variables.mk', line 44)
MISSPELL := /Users/nyza/go/bin/misspell-v0.3.4
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.2EQNciSNcs/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `.bingo/Variables.mk', line 5)
GOBIN = $(firstword $(subst :, ,${GOPATH}))/bin
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/nyza/obsctl
# makefile (from `Makefile', line 11)
GIT = $(shell which git)
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
GOMODCACHE = /Users/nyza/go/pkg/mod
# environment
HOME = /Users/nyza
# makefile (from `Makefile', line 15)
SED = $(shell which gsed 2>/dev/null || which sed)
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/nyza/Library/Application Support/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = nyza
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from `.bingo/Variables.mk', line 3)
BINGO_DIR := .bingo/
# default
MAKE_VERSION := 3.81
# environment
USER = nyza
# makefile
.DEFAULT_GOAL := /Users/nyza/go/bin/faillint-v1.8.0
# makefile (from `Makefile', line 2)
FILES_TO_FMT = $(shell find . -path ./vendor -prune -o -name '*.go' -print)
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/jm/g6zkfbzn6fzgdjkqk92b5xqc0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/nyza/Library/Application Support/Code/1.67.2-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.1091447.1091453
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 3)
MDOX_VALIDATE_CONFIG = .mdox.validate.yaml
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `.bingo/Variables.mk', line 26)
GOIMPORTS := /Users/nyza/go/bin/goimports-v0.1.7
# default
.INCLUDE_DIRS = /usr/local/include
# makefile (from `.bingo/Variables.mk', line 20)
FAILLINT := /Users/nyza/go/bin/faillint-v1.8.0
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 1082
# variable set hash-table stats:
# Load=80/1024=8%, Rehash=0, Collisions=10/152=7%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777220, inode 3704314): 23 files, no impossibilities.

# 23 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

all: format build
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.bingo//faillint.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: all build check-comments deps docs check-docs format test check-git test-e2e
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/nyza/go/bin/misspell-v0.3.4: .bingo//misspell.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `.bingo/Variables.mk', line 46):
	@# Install binary/ries using Go 1.14+ build command. This is using bwplotka/bingo-controlled, separate go module with pinned dependencies.
	@echo "(re)installing $(GOBIN)/misspell-v0.3.4"
	@cd $(BINGO_DIR) && $(GO) build -mod=mod -modfile=misspell.mod -o=$(GOBIN)/misspell-v0.3.4 "github.com/client9/misspell/cmd/misspell"
	

deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 54):
	@go mod tidy
	@go mod verify
	

# Not a target:
.bingo//mdox.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-docs: build /Users/nyza/go/bin/mdox-v0.9.0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 64):
	@echo ">> checking formatting and links $(PATH)"
	PATH=${PATH}:$(GOBIN) $(MDOX) fmt --check -l --links.validate.config-file=$(MDOX_VALIDATE_CONFIG) *.md
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.bingo/Variables.mk:
#  Implicit rule search has been done.
#  Last modified 2022-07-15 10:11:10
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

format: /Users/nyza/go/bin/goimports-v0.1.7
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := format
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /Users/nyza/go/bin/goimports-v0.1.7
# automatic
# | := 
# automatic
# < := /Users/nyza/go/bin/goimports-v0.1.7
 
# automatic
# ^ := /Users/nyza/go/bin/goimports-v0.1.7
# automatic
# ? := /Users/nyza/go/bin/goimports-v0.1.7
# variable set hash-table stats:
 
# Load=8/32=25%, Rehash=0, Collisions=3/14=21%
#  commands to execute (from `Makefile', line 70):
	@echo ">> formatting code"
	@$(GOIMPORTS) -w $(FILES_TO_FMT)
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-28 07:22:23
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

check-comments:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 49):
	@echo ">> checking Go comments trailing periods\n\n\n"
	@./scripts/build-check-comments.sh
	

/Users/nyza/go/bin/faillint-v1.8.0: .bingo//faillint.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `.bingo/Variables.mk', line 22):
	@# Install binary/ries using Go 1.14+ build command. This is using bwplotka/bingo-controlled, separate go module with pinned dependencies.
	@echo "(re)installing $(GOBIN)/faillint-v1.8.0"
	@cd $(BINGO_DIR) && $(GO) build -mod=mod -modfile=faillint.mod -o=$(GOBIN)/faillint-v1.8.0 "github.com/fatih/faillint"
	

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 77):
	@echo ">> running unit tests (without cache)"
	@rm -rf $(GOCACHE)
	@go test -v -timeout=30m $(shell go list ./... | grep -v e2e);
	

build: check-git deps
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 44):
	@echo ">> building obsctl"
	@GOBIN=$(GOBIN) go install github.com/observatorium/obsctl
	

# Not a target:
.bingo//goimports.mod:
#  Implicit rule search has been done.
#  Last modified 2022-07-15 10:11:10
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

help:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 37):
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n\nTargets:\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-10s\033[0m %s\n", $$1, $$2 }' $(MAKEFILE_LIST)
	

# Not a target:
.bingo//misspell.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.bingo//golangci-lint.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-git:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 84):
	@test -x $(GIT) || (echo >&2 "No git executable binary found at $(GIT)."; exit 1)
	

test-e2e:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	@rm -rf ./test/e2e/e2e_*
	@rm -rf ./test/e2e/tmp
	# @./test/e2e/start_hydra.sh
	@go test -v -timeout 99m github.com/observatorium/obsctl/test/e2e
	# @kill -9 `pgrep hydra`
	

/Users/nyza/go/bin/goimports-v0.1.7: .bingo//goimports.mod
#  Implicit rule search has not been done.
#  Last modified 2022-07-20 13:49:55
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%
#  commands to execute (from `.bingo/Variables.mk', line 28):
	@# Install binary/ries using Go 1.14+ build command. This is using bwplotka/bingo-controlled, separate go module with pinned dependencies.
	@echo "(re)installing $(GOBIN)/goimports-v0.1.7"
	@cd $(BINGO_DIR) && $(GO) build -mod=mod -modfile=goimports.mod -o=$(GOBIN)/goimports-v0.1.7 "golang.org/x/tools/cmd/goimports"
	

docs: build /Users/nyza/go/bin/mdox-v0.9.0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 59):
	@echo ">> generating docs $(PATH)"
	PATH=${PATH}:$(GOBIN) $(MDOX) fmt -l --links.validate.config-file=$(MDOX_VALIDATE_CONFIG) *.md
	

/Users/nyza/go/bin/mdox-v0.9.0: .bingo//mdox.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `.bingo/Variables.mk', line 40):
	@# Install binary/ries using Go 1.14+ build command. This is using bwplotka/bingo-controlled, separate go module with pinned dependencies.
	@echo "(re)installing $(GOBIN)/mdox-v0.9.0"
	@cd $(BINGO_DIR) && $(GO) build -mod=mod -modfile=mdox.mod -o=$(GOBIN)/mdox-v0.9.0 "github.com/bwplotka/mdox"
	

lint: /Users/nyza/go/bin/faillint-v1.8.0 /Users/nyza/go/bin/golangci-lint-v1.44.0 /Users/nyza/go/bin/misspell-v0.3.4 build format docs check-git deps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 96):
	$(call require_clean_work_tree,"detected not clean master before running lint")
	@echo ">> verifying modules being imported"
	@$(FAILLINT) -paths "fmt.{Print,Printf,Println}" -ignore-tests ./...
	@echo ">> examining all of the Go files"
	@go vet -stdmethods=false ./...
	@echo ">> linting all of the Go files GOGC=${GOGC}"
	@$(GOLANGCI_LINT) run
	@echo ">> detecting misspells"
	@find . -type f | grep -v vendor/ | grep -vE '\./\..*' | xargs $(MISSPELL) -error
	

/Users/nyza/go/bin/golangci-lint-v1.44.0: .bingo//golangci-lint.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `.bingo/Variables.mk', line 34):
	@# Install binary/ries using Go 1.14+ build command. This is using bwplotka/bingo-controlled, separate go module with pinned dependencies.
	@echo "(re)installing $(GOBIN)/golangci-lint-v1.44.0"
	@cd $(BINGO_DIR) && $(GO) build -mod=mod -modfile=golangci-lint.mod -o=$(GOBIN)/golangci-lint-v1.44.0 "github.com/golangci/golangci-lint/cmd/golangci-lint"
	

# files hash-table stats:
# Load=27/1024=3%, Rehash=0, Collisions=0/86=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 2
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4067 / max = 4067 / min = 4067 / avg = 4067

# Finished Make data base on Thu Jul 28 07:47:29 2022

 
